{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","image","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMA6BeA,EA1BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACHC,mBAAS,IADN,mBAChCC,EADgC,KACpBC,EADoB,KAevC,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAMC,iBACFJ,EAAWK,OAAOC,OAAS,GAC3BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAElDN,EAAc,MAKV,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdrB,SAACP,GACtBF,EAAcE,EAAMQ,OAAOF,Y,uBCPtBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,mGACqFC,UACpGH,IAFe,SAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAG1Ca,QAAQC,IAAIR,GAbO,kBAcZA,GAdY,4CAAH,sDCcLS,EAZK,SAAC,GAAoB,IAAlBL,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAE1B,OACI,yBAAKgB,UAAU,0CACX,yBAAKC,IAAKjB,EAAKgB,UAAU,eAAeE,IAAKR,IAC7C,yBAAKM,UAAU,aACX,wBAAIA,UAAU,cAAcN,MCe7BS,EAnBC,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAetC,OATAC,qBAAU,WACN1B,EAAQC,GAAU0B,MAAK,SAACC,GACpBH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAGlB,CAACtB,IAEGuB,EDb2BK,CAAa5B,GAAjCa,EADgB,EACtBN,KAAce,EADQ,EACRA,QAEtB,OACI,oCACI,wBAAIJ,UAAU,qCAAqClB,GAClDsB,GACG,uBAAGJ,UAAU,oCAAb,eAGJ,yBAAKA,UAAU,aACVL,EAAOJ,KAAI,SAACoB,GAAD,OACR,kBAAC,EAAD,eAAaC,IAAKD,EAAMlB,IAAQkB,UEKrCE,EAjBM,WAAO,IAAD,EACa7C,mBAAS,CAAC,cADvB,mBAChBQ,EADgB,KACJT,EADI,KAGvB,OACI,oCACI,8CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BACKS,EAAWe,KAAI,SAACT,GAAD,OACZ,kBAAC,EAAD,CAAS8B,IAAK9B,EAAUA,SAAUA,U,MCTtDgC,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.422c6403.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputValue = (event) => {\n        setInputValue(event.target.value);\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories((categories) => [inputValue, ...categories]);\n        }\n        setInputValue('');\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" value={inputValue} onChange={handleInputValue} />\n        </form>\n    );\n};\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;\n","export const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&api_key=ihBYOecH3u0cOZq2CNxkzpwWbB5zvlWC&q=${encodeURI(\n        category\n    )}`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map((img) => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n        };\n    });\n    console.log(gifs);\n    return gifs;\n};\n","import React from 'react';\n\nconst GifGridItem = ({ title, url }) => {\n    // console.log({ id, title, url });\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} className=\"card-img-top\" alt={title} />\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">{title}</h5>\n            </div>\n        </div>\n    );\n};\n\nexport default GifGridItem;\n","import React /*useEffect, useState*/ from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({ category }) => {\n    const { data: images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            {loading && (\n                <p className=\"animate__animated animate__flash\">Cargando...</p>\n            )}\n\n            <div className=\"card-grid\">\n                {images.map((image) => (\n                    <GifGridItem key={image.id} {...image} />\n                ))}\n            </div>\n        </>\n    );\n};\n\nexport default GifGrid;\n","import { useEffect, useState } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    });\n\n    useEffect(() => {\n        getGifs(category).then((imgs) => {\n            setState({\n                data: imgs,\n                loading: false,\n            });\n        });\n    }, [category]);\n\n    return state;\n};\n","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n    const [categories, setCategories] = useState(['One Punch']);\n\n    return (\n        <>\n            <h2>Gif Expert App</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n            <ol>\n                {categories.map((category) => (\n                    <GifGrid key={category} category={category} />\n                ))}\n            </ol>\n        </>\n    );\n};\n\nexport default GifExpertApp;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport GifExpertApp from './GifExpertApp'\nimport './index.css'\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'))\n"],"sourceRoot":""}